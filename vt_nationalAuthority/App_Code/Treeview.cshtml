@helper GetTreeView(List<DataAccessLayer.Models.FunctionModel> fun, int? parentID)
{
    foreach (var i in fun.Where(a => a.iParentFunctionCode.Equals(parentID)))
    {
       <li>
           @{var child = fun.Where(a => a.iParentFunctionCode.Equals(i.iFunctionCode)).Count();}
           @if (child > 0)
           {
               <span class="fa fa-minus-circle collapsible collapseTree" style="color:#1b608a">&nbsp;</span>
           }
           else
           {
               <span style="width:15px; display:inline-block">&nbsp;</span>
           }
           @if (i.iCountGroupCode > 0)
           {
               <input type="checkbox" class='chk checkbox option-input-child' onclick="ckBoxClicked(this);" value="@i.iFunctionCode" checked id="checks" />
               <h4 style="display:inline-block;margin-right:3px;color:@i.sTreeColorName" > @i.sFunctionName</h4>
           }
           else
           {
               <input type="checkbox" class='chk checkbox option-input-child' onclick="ckBoxClicked(this);" value="@i.iFunctionCode" />
                 <h4 style="display:inline-block;margin-right:3px;color:@i.sTreeColorName" > @i.sFunctionName</h4>
           }
           @if (child > 0)
           {
              <ul id="@i.sFunctionName">
                  @Treeview.GetTreeView(fun, i.iFunctionCode)
              </ul>
           }
       </li>
    }
}




